""" This file contains only regular expressions """

from Reader import *
pattern_string = re.compile("[a-zA-Z]")
pattern_caps = re.compile("[A-Z]")
pattern_small = re.compile("[a-z]")
pattern_integer = re.compile("[0-9]")
pattern_email = re.compile("[\w+|\W+]@[\w+|\W+]")
pattern_phone = re.compile("-")
pattern_phone_three_parts_two_hyphens=re.compile("\d{3}-\d{3}-\d{4}")
pattern_phone_three_parts_one_hyphen_one_parantheses=re.compile("\(\d{3}\) \d{3}-\d{4}")
pattern_phone_three_parts_plus_one=re.compile("\+1 \d{3} \d{3} \d{4}")
pattern_phone_11_digits=re.compile("\d{11}")
pattern_phone_10_digits=re.compile("\d{10}")
pattern_empty = re.compile("^\s*$")
pattern_no_entry = re.compile("^(?![\s\S])")
pattern_website = re.compile("www+|WWW+")
pattern_dot = re.compile("[.]")
pattern_word_after_dot = re.compile("[.][a-zA-Z]")
pattern_http = re.compile("http")
pattern_space = re.compile("[\w+|\W+]\s[\w+|\W+]")
pattern_hashtag = re.compile("#")
pattern_comma = re.compile(",")
pattern_successive_hyphens = re.compile("--")
patten_phone_parantheses = re.compile("\(\d+\)|\(\d+|\d+\)|\d+\(\d+\)")
pattern_slash = re.compile("[\w+|\W+]/[\w+|\W+]")
pattern_zipcode_one_hyphen = re.compile('^\d{5}-\d{4}$')
pattern_zipcode_without_hyphen = re.compile('^\d{5}$')
patter_zipcode_four_digits = re.compile('^\d{4}$')
pattern_zipcode_two_hyphen = re.compile('^\d{5}--\d{4}$')
pattern_special_characters = re.compile("[!|$|\\\\|/|%|^|+|=|_|*|}|~|\[|\]|:|?|`|<|>|{]")
pattern_special_characters_website = re.compile("[\\\\|%|^|\||}|`|<|>|{]")
pattern_special_characters_phone = re.compile("[!|$|\\\\|/|%|^|=|_|*|}|~|\[|\]|:|?|`|<|>|{]")
pattern_open_parantheses =  re.compile("[()]")
pattern_close_parantheses = re.compile("[)]")
pattern_at_the_rate = re.compile("@")
pattern_uppercase = re.compile("[A-Z]")
pattern_lowercase = re.compile("[a-z]")
pattern_decimal = re.compile("\d\.\d")

def regular_expressions(entry):		
	find_string = re.findall(pattern_string,entry)
	adict['find_string'] = find_string
	find_integer = re.findall(pattern_integer,entry)
	adict['find_integer'] = find_integer
	find_email = re.findall(pattern_email,entry)
	adict['find_email'] = find_email
	find_phone = re.findall(pattern_phone,entry)
	adict['find_phone'] = find_phone
	find_phone_three_parts_two_hyphens = re.findall(pattern_phone_three_parts_two_hyphens,entry)
	adict['find_phone_three_parts_two_hyphens'] = find_phone_three_parts_two_hyphens
	find_phone_three_parts_one_hyphen_one_parantheses = re.findall(pattern_phone_three_parts_one_hyphen_one_parantheses,entry)
	adict['find_phone_three_parts_one_hyphen_one_parantheses'] = find_phone_three_parts_one_hyphen_one_parantheses
	find_pattern_phone_three_parts_plus_one=re.findall(pattern_phone_three_parts_plus_one,entry)
	adict['find_pattern_phone_three_parts_plus_one'] = find_pattern_phone_three_parts_plus_one
	find_pattern_phone_11_digits = re.findall(pattern_phone_11_digits,entry)
	adict['find_pattern_phone_11_digits'] = find_pattern_phone_11_digits
	find_pattern_phone_10_digits = re.findall(pattern_phone_10_digits,entry)
	adict['find_pattern_phone_10_digits'] = find_pattern_phone_10_digits
	find_empty = re.findall(pattern_empty,entry)
	adict['find_empty'] = find_empty
	find_no_entry = re.findall(pattern_no_entry,entry)						
	adict['find_no_entry'] = find_no_entry 
	find_website = re.findall(pattern_website,entry)
	adict['find_website'] = find_website
	find_dot = re.findall(pattern_dot,entry)
	adict['find_dot'] = find_dot
	find_http = re.findall(pattern_http,entry)
	adict['find_http'] = find_http
	find_space = re.findall(pattern_space,entry)
	adict['find_space'] = find_space
	find_caps = re.findall(pattern_caps,entry)
	adict['find_caps'] =find_caps 
	find_word_after_dot = re.findall(pattern_word_after_dot,entry)
	adict['find_word_after_dot'] = find_word_after_dot
	find_hashtag = re.findall(pattern_hashtag,entry)
	adict['find_hashtag'] = find_hashtag
	find_comma = re.findall(pattern_comma,entry)
	adict['find_comma'] = find_comma
	find_successive_hyphens =re.findall(pattern_successive_hyphens,entry)
	adict['find_successive_hyphens'] = find_successive_hyphens
	find_pattern_phone_parantheses = re.findall(patten_phone_parantheses,entry)
	adict['find_pattern_phone_parantheses'] = find_pattern_phone_parantheses
	find_slash = re.findall(pattern_slash,entry)
	adict['find_slash'] = find_slash
	find_small = re.findall(pattern_small,entry)
	adict['find_small'] = find_small
	find_zipcode_one_hyphen=re.findall(pattern_zipcode_one_hyphen,entry)
	adict['find_zipcode_one_hyphen'] = find_zipcode_one_hyphen
	find_zipcode_without_hyphen= re.findall(pattern_zipcode_without_hyphen,entry)
	adict['find_zipcode_without_hyphen'] = find_zipcode_without_hyphen
	find_zipcode_two_hyphen=re.findall(pattern_zipcode_two_hyphen,entry)
	adict['find_zipcode_two_hyphen'] = find_zipcode_two_hyphen
	find_zipcode_four_digits=re.findall(patter_zipcode_four_digits,entry)
	adict['find_zipcode_four_digits'] = find_zipcode_four_digits
	find_special_characters=re.findall(pattern_special_characters,entry)
	adict['find_special_characters'] = find_special_characters 
	find_special_characters_phone=re.findall(pattern_special_characters_phone,entry)
	adict['find_special_characters_phone'] = find_special_characters_phone
	find_special_characters_website=re.findall(pattern_special_characters_website,entry)
	adict['find_special_characters_website'] = find_special_characters_website
	find_open_parantheses=re.findall(pattern_open_parantheses,entry)
	adict['find_open_parantheses'] = find_open_parantheses
	find_close_paranthses=re.findall(pattern_close_parantheses,entry)
	adict['find_close_paranthses'] = find_close_paranthses 
	find_at_the_rate=re.findall(pattern_at_the_rate,entry)
	adict['find_at_the_rate'] = find_at_the_rate
	find_uppercase = re.findall(pattern_uppercase,entry)
	adict['find_uppercase'] = find_uppercase
	find_lowercase = re.findall(pattern_lowercase,entry)
	adict['find_lowercase'] = find_lowercase
	find_decimal=re.findall(pattern_decimal,entry)
	adict['find_decimal'] = find_decimal
	return adict